#!/bin/bash 

BASE_COLLECTION_PATH="must-gather"
MACHINECONFIG_CONFIG_PATH=${OUT:-"${BASE_COLLECTION_PATH}/machine_config_ondisk"}

mkdir -p "${MACHINECONFIG_CONFIG_PATH}"/

# gather_machineconfig_ondisk_currentconfig collects the MCO's "on-disk" MachineConfig files
function gather_machineconfig_ondisk {
     
    echo "INFO: Gathering on-disk MachineConfig from degraded nodes"
    # we only really need the info from nodes that the MCO has marked as degraded 
    MACHINECONFIG_DEGRADED_NODES=$(oc get node -o jsonpath='{.items[?(@.metadata.annotations.machineconfiguration\.openshift\.io/state=="Degraded")].metadata.name}')
    for NODE in ${MACHINECONFIG_DEGRADED_NODES}; do
         # use the existing MCD pod on the node to get the files
         DAEMONPOD=$(oc get pods -n openshift-machine-config-operator --field-selector spec.nodeName=${NODE} --selector k8s-app=machine-config-daemon -o custom-columns=:metadata.name --no-headers)
         # collect the boostrap config that the Node got from the MCS
         timeout -v 1m oc cp -c machine-config-daemon openshift-machine-config-operator/"${DAEMONPOD}":rootfs/etc/mcs-machine-config-content.json "${MACHINECONFIG_CONFIG_PATH}"/"${NODE}"/mcs-machine-config-content.json &
         PIDS+=($!)
    done

}

PIDS=()
gather_machineconfig_ondisk

echo "INFO: Waiting for on-disk MachineConfig collection to complete ..."
wait "${PIDS[@]}"
echo "INFO: on-disk MachineConfig config collection complete."

# force disk flush to ensure that all data gathered is accessible in the copy container
sync
